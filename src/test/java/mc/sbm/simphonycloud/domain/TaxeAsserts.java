package mc.sbm.simphonycloud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TaxeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeAllPropertiesEquals(Taxe expected, Taxe actual) {
        assertTaxeAutoGeneratedPropertiesEquals(expected, actual);
        assertTaxeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeAllUpdatablePropertiesEquals(Taxe expected, Taxe actual) {
        assertTaxeUpdatableFieldsEquals(expected, actual);
        assertTaxeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeAutoGeneratedPropertiesEquals(Taxe expected, Taxe actual) {
        assertThat(actual)
            .as("Verify Taxe auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeUpdatableFieldsEquals(Taxe expected, Taxe actual) {
        assertThat(actual)
            .as("Verify Taxe relevant properties")
            .satisfies(a -> assertThat(a.getNom()).as("check nom").isEqualTo(expected.getNom()))
            .satisfies(a -> assertThat(a.getNomCourt()).as("check nomCourt").isEqualTo(expected.getNomCourt()))
            .satisfies(a -> assertThat(a.getVatTaxRate()).as("check vatTaxRate").isEqualTo(expected.getVatTaxRate()))
            .satisfies(a -> assertThat(a.getClassId()).as("check classId").isEqualTo(expected.getClassId()))
            .satisfies(a -> assertThat(a.getTaxType()).as("check taxType").isEqualTo(expected.getTaxType()))
            .satisfies(a -> assertThat(a.getEtablissementRef()).as("check etablissementRef").isEqualTo(expected.getEtablissementRef()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeUpdatableRelationshipsEquals(Taxe expected, Taxe actual) {
        // empty method
    }
}
