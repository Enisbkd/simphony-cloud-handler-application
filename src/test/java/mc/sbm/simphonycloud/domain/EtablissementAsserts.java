package mc.sbm.simphonycloud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EtablissementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementAllPropertiesEquals(Etablissement expected, Etablissement actual) {
        assertEtablissementAutoGeneratedPropertiesEquals(expected, actual);
        assertEtablissementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementAllUpdatablePropertiesEquals(Etablissement expected, Etablissement actual) {
        assertEtablissementUpdatableFieldsEquals(expected, actual);
        assertEtablissementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementAutoGeneratedPropertiesEquals(Etablissement expected, Etablissement actual) {
        assertThat(actual)
            .as("Verify Etablissement auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementUpdatableFieldsEquals(Etablissement expected, Etablissement actual) {
        assertThat(actual)
            .as("Verify Etablissement relevant properties")
            .satisfies(a -> assertThat(a.getNom()).as("check nom").isEqualTo(expected.getNom()))
            .satisfies(a -> assertThat(a.getEstGroupe()).as("check estGroupe").isEqualTo(expected.getEstGroupe()))
            .satisfies(a -> assertThat(a.getSourceVersion()).as("check sourceVersion").isEqualTo(expected.getSourceVersion()))
            .satisfies(a -> assertThat(a.getSocieteRef()).as("check societeRef").isEqualTo(expected.getSocieteRef()))
            .satisfies(a -> assertThat(a.getHierRef()).as("check hierRef").isEqualTo(expected.getHierRef()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtablissementUpdatableRelationshipsEquals(Etablissement expected, Etablissement actual) {
        // empty method
    }
}
