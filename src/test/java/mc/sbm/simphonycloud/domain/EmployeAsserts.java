package mc.sbm.simphonycloud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmployeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeAllPropertiesEquals(Employe expected, Employe actual) {
        assertEmployeAutoGeneratedPropertiesEquals(expected, actual);
        assertEmployeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeAllUpdatablePropertiesEquals(Employe expected, Employe actual) {
        assertEmployeUpdatableFieldsEquals(expected, actual);
        assertEmployeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeAutoGeneratedPropertiesEquals(Employe expected, Employe actual) {
        assertThat(actual)
            .as("Verify Employe auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeUpdatableFieldsEquals(Employe expected, Employe actual) {
        assertThat(actual)
            .as("Verify Employe relevant properties")
            .satisfies(a -> assertThat(a.getNum()).as("check num").isEqualTo(expected.getNum()))
            .satisfies(a -> assertThat(a.getFirstName()).as("check firstName").isEqualTo(expected.getFirstName()))
            .satisfies(a -> assertThat(a.getLastName()).as("check lastName").isEqualTo(expected.getLastName()))
            .satisfies(a -> assertThat(a.getUserName()).as("check userName").isEqualTo(expected.getUserName()))
            .satisfies(a -> assertThat(a.getEtablissementRef()).as("check etablissementRef").isEqualTo(expected.getEtablissementRef()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeUpdatableRelationshipsEquals(Employe expected, Employe actual) {
        // empty method
    }
}
